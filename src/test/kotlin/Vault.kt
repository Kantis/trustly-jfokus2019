import org.junit.jupiter.api.Test

class Vault {

    data class Point(
        val base: Double,
        val exponent: Double
    )

    fun sortPoints(points: List<Point>): List<Point> {
        return points.sortedBy { Math.log(it.base) * it.exponent }
    }

    @Test
    fun example() {
        val points = listOf(
            Point(45343511318694404642719604362.0, 96998988895568789888868585696.0),
            Point(74415460320437189122669965497.0, 97979666776786555895567977998.0),
            Point(59206260581882026203082821492.0, 99686687596775799597775778788.0),
            Point(56421536345366321106715813359.0, 95675585898599986658958656996.0),
            Point(39657926006714723723510393859.0, 99798578996576555997779565597.0),
            Point(84323904797990839311235547385.0, 95598885886897685795785785659.0),
            Point(98638771599361951651717606266.0, 96876966776598866997869868665.0),
            Point(95288074121898813563121946126.0, 96859796957766887575875796856.0),
            Point(97846979523837018939941269152.0, 97688997597697988657666695686.0),
            Point(14004942998854835861626042962.0, 98675685658989578578975958989.0),
            Point(95854705310033822423151155439.0, 98888597959578565988655568856.0),
            Point(22457030991196303077800743806.0, 95799765556798797656686555555.0),
            Point(42561710778478954660554398481.0, 98758677678767775868598599768.0),
            Point(15250093482014767914026151429.0, 98987965769856869887565896966.0),
            Point(38176899636993092558456866200.0, 96986979789988785869556678686.0),
            Point(88452769668652952397244653175.0, 97799996766856598756595657976.0),
            Point(95164991695515366586365265289.0, 99856659585686666986668978997.0),
            Point(63224297249228820524763259113.0, 97556596696678785569859687775.0),
            Point(41055460939362728858811301029.0, 96867685989678767997879655696.0),
            Point(54267266223846823497268894292.0, 99985556995559857669587886867.0),
            Point(68942731132528620452559464989.0, 98588876898875788897779998796.0),
            Point(61124025882655739168690435770.0, 98676699576678886679775975598.0),
            Point(51386046044038365493162779472.0, 98685786895968886986785985667.0),
            Point(49285897684950011776953582309.0, 99585595876787676596896868869.0),
            Point(44894522999879643102100491543.0, 96575859796887876575777665756.0),
            Point(41721230773091277689749646752.0, 96766785559677959697959586586.0),
            Point(80562185893810589670224702000.0, 95855595898887565597669966888.0),
            Point(14976030744007811091587244769.0, 98567785768757598779595879986.0),
            Point(31867361874823153027534237794.0, 95999857658967768999989697855.0),
            Point(68766073858738548321798008923.0, 97588668758676985796678668579.0)
        )
        print(sortPoints(points).map { points.indexOf(it) })
    }
}